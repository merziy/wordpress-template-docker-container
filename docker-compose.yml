version: "3.9"

services:
  # MySQL Database image
  db:
    image: mysql:5.7
    volumes:
      - db:/var/lib/mysql
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: admin
      MYSQL_DATABASE: ${DB_NAME}
      MYSQL_USER: ${DB_USER}
      MYSQL_PASSWORD: ${DB_PASSWORD}

  # WordPress image based on Apache
  wordpress:
    depends_on:
      - db
    image: wordpress:latest
    volumes:
      - wordpress:/var/www/html
      - ./wordpress/wp-content:/var/www/html/wp-content
      - ./wordpress.ini:/usr/local/etc/php/conf.d/wordpress.ini
    ports:
      - "8000:80"
    restart: always
    environment:
      WORDPRESS_DB_HOST: db
      WORDPRESS_DB_USER: ${DB_NAME}
      WORDPRESS_DB_PASSWORD: ${DB_USER}
      WORDPRESS_DB_NAME: ${DB_PASSWORD}

  # phpMyAdmin image
  phpMyAdmin:
    depends_on:
      - db
    image: phpmyadmin/phpmyadmin
    restart: always
    ports:
      - '8080:80'
    environment:
      PMA_HOST: db
      MYSQL_ROOT_PASSWORD: admin

volumes:
  wordpress:
  db:

# Some commands that might come in handy
#
# docker-compose up -d --force-recreate --remove-orphans
#
# –force-recreate forces the existing container to be recreated so that any changes
# to the configuration or .env file are implemented when it starts again.
# –remove-orphans removes containers that are no longer used by the docker-compose file.

